# To avoid querying cognito admin api
type OrganizationUser
  @model (subscriptions: { level: public })
  @key(fields: ["organizationId","username"])
  @key(name: "byGroupByActive", fields: ["groupId", "isActive"], queryField: "getOrgUsersByGroupByActive")
  @auth(rules: [
    {allow: owner, ownerField: "username", operations: [read, create]},
    {allow: groups, groups: ["OrgManagers"], operations: [read, create, update]},
    {allow: groups, groups: ["AppAdmins", "OrgAdmins"]},
  ])
{
  organizationId: ID!
  username: String!
  idNumber: String! # ex:學號
  name: String!
  role: RoleType!
  groupId: ID
  isActive: Int!
  currentPoints: Int!
  earnedPoints: Int!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  # relationship
  organization: Organization @connection(fields:["organizationId"])
  # group: OrganizationGroup @connection(fields:["organization", "groupId"])
  # tasks: [OrganizationUserTask] @connection(keyName: "byUserByCreatedAt", fields: ["username"])
  # transactions: [OrganizationTransaction] @connection(keyName: "byUserByCreatedAt", fields: ["username"])
}

